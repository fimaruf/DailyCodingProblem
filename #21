# Daily Coding Problem: Problem #21

# This problem was asked by Snapchat.
# Given an array of time intervals (start, end) for classroom lectures (possibly overlapping), find the minimum number of rooms required.
# For example, given [(30, 75), (0, 50), (60, 150)], you should return 2.


def solution(arr):
    n = len(arr)
    start = []
    end = []
    
    for interval in arr:
        start.append(interval[0])
        end.append(interval[1])
    
    start = sorted(start)
    end = sorted(end)
    
    res = 0
    i = 0
    j = 0
    
    while i < n:
        if start[i] < end[j]:
            i += 1
        elif start[i] > end[j]:
            j += 1
        else: 
            i += 1
            j += 1
        res = max(res, i-j)
        
    return res
    
arr = [15,20],[12,14],[1,17],[0,30],[7,10],[5,10]
print(solution(arr))
